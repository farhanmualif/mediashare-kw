<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Media Share</title>
    <link rel="icon" href="<%= "/static/images/logo.jpg" %>" type="image/x-icon"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
      crossorigin="anonymous" />
  </head>
  <body>
    <div class="container d-flex justify-content-center">
      <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
      <div id="tiktok"></div>
      <div class="widget d-flex justify-content-center">
        <!-- <h1>Hello world</h1> -->
        <div id="player"></div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
      crossorigin="anonymous"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
      crossorigin="anonymous"></script>
    <script async src="https://www.tiktok.com/embed.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/static/script/helper.js"></script>
    <script type="text/javascript">
      let socket = io();

      //  const display = document.getElementById("display");
      const list_text = document.getElementById("list-text");
      const name = document.getElementById("name");
      const message = document.getElementById("message");
      const nominal = document.getElementById("nominal");
      let duration;

      // embed video 2
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement("script");

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName("script")[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.

      let player;
      let videoPlaying;
      let videoQueue = [];
      nominal;

      function onYouTubeIframeAPIReady() {
        console.log("onYouTubeIframeAPIReady... ");
        socket.on("newData", (data) => {
          if (data.tiktokEmbed == undefined) {
            videoQueue.push({
              id: data.id,
              linkMedia: data.linkMedia,
              startAtSecond: data.startAtSecond,
              duration: data.duration,
              name: data.name,
              message: data.message,
              nominal: data.nominal,
              typeMedia: data.typeMedia,
            });
          } else {
            videoQueue.push({
              id: data.id,
              linkMedia: data.linkMedia,
              startAtSecond: data.startAtSecond,
              duration: data.duration,
              name: data.name,
              message: data.message,
              nominal: data.nominal,
              typeMedia: data.typeMedia,
              tiktokEmbed: data.tiktokEmbed,
            });
          }

          try {
            if (!videoPlaying) {
              playNextVideo();
            }
          } catch (e) {
            console.log(e);
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      let captureData;
      var done = false;

      // call this function will play a video on browser
      function playYoutubeVideo(id, videoId, startAtSecond, duration) {
        const endSecond = startAtSecond + duration;
        player = new YT.Player("player", {
          height: "390",
          width: "640",
          videoId: videoId,
          playerVars: {
            playsinline: 1,
            autoplay: 1,
            "encrypted-media": 1,
            controls: 0,
            start: startAtSecond,
            end: endSecond,
          },
          events: {
            onReady: onPlayerReady,
            onStateChange: (event) => {
              if (event.data == YT.PlayerState.PLAYING) {
                setTimeout(() => {
                  console.log("stop video");
                  player.stopVideo();
                  player.destroy();
                  videoPlaying = true;
                  sendTriggerStatusVideo(videoPlaying, id);
                }, duration * 1000);
              }
            }, // onPlayerStateChange
          },
        });
        player.setSize(700, 500);
      }

      function sendTriggerStatusVideo(status, id) {
        socket.emit("the video has played", {
          status: status,
          id: id,
        });
      }
    </script>
  </body>
</html>
